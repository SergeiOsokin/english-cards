{"version":3,"sources":["components/Header.js","pages/MainPage.js","components/FlashCard.js","pages/RepeatPage.js","components/Wordslist.js","pages/WordsPage.js","App.js","index.js"],"names":["Header","className","type","to","MainPage","React","Component","FlashCardForm","randomIndexWord","Math","floor","random","wordsArr","length","useState","rusWord","rusWordTrans","engWord","engWord1","engWord2","engWord3","engWord4","words","setWords","rightAnswers","setRightAnswer","wrongAnswers","setWrongAnswer","btnArr","shadow","style","setStyle","changeBtn","i","j","temp","handleBtn","e","transWord","document","querySelector","getAttribute","target","value","setTimeout","translate","boxShadow","name","onClick","FlashCards","WordsList","placeholder","id","onChange","phrase","table","regPhrase","RegExp","flag","rows","cells","test","innerHTML","display","tableSearch","map","word","index","WordsPage","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4a90e4d.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\n\nexport const Header = () => {\n    // document.addEventListener('DOMContentLoaded', function () {\n    //     var elems = document.querySelectorAll('.sidenav');\n    //     var instances = M.Sidenav.init(elems, options);\n    // });\n\n    return (\n        <>\n            <nav>\n                <div className=\"nav-wrapper\">\n                    <input type=\"checkbox\" className=\"checkbox\" />\n                    <ul  className=\"right nav-menu\">\n                        <li><NavLink to=\"/home\">Главная</NavLink></li>\n                        <li><NavLink to=\"/flashcards\">Повторение</NavLink></li>\n                        <li><NavLink to=\"/wordslist\">Список слов</NavLink></li>\n                    </ul>\n                </div>\n            </nav>\n        </>\n    )\n}","import React from 'react';\nimport { Header } from '../components/Header';\n\nexport default class MainPage extends React.Component {\n    render() {\n        return(\n            <Header></Header>\n        )\n        \n    }\n}","import React, { useState } from 'react';\nimport { Header } from './Header';\nimport { wordsArr } from '../words.json';\n\nexport const FlashCardForm = (qwe = '') => {\n    const randomIndexWord = Math.floor(Math.random() * (wordsArr.length - 0) + 0);\n    const [words, setWords] = useState({\n        rusWord: wordsArr[randomIndexWord].rusWord,\n        rusWordTrans: wordsArr[randomIndexWord].engWord,\n        engWord1: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n        engWord2: wordsArr[randomIndexWord].engWord,\n        engWord3: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n        engWord4: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n    });\n    const [rightAnswers, setRightAnswer] = useState(0);\n    const [wrongAnswers, setWrongAnswer] = useState(0);\n    let btnArr = ['engWord1', 'engWord2', 'engWord3', 'engWord4'];\n\n    const [style, setStyle] = useState({\n        shadow: 'none'\n    })\n    // тусуем кнопки, чтобы ответ был всегда в разном месте\n    const changeBtn = () => {\n        var i = 0, j = 0, temp = null\n        for (i = btnArr.length - 1; i > 0; i -= 1) {\n            j = Math.floor(Math.random() * (i + 1))\n            temp = btnArr[i]\n            btnArr[i] = btnArr[j]\n            btnArr[j] = temp\n        }\n        return btnArr;\n    }\n    const handleBtn = (e) => {\n        changeBtn();\n        const transWord = document.querySelector('.card__word').getAttribute('translate')\n        if (e.target.value === transWord) {\n            setRightAnswer(rightAnswers + 1);\n            setStyle({\n                shadow: 'inset 0px 0px 15px 0px #32CD32'\n            });\n            setTimeout(() => { setStyle({ shadow: 'none' }) }, 100);\n        } else if (e.target.value != transWord) {\n            setWrongAnswer(wrongAnswers + 1);\n            setStyle({\n                shadow: 'inset 0px 0px 15px 0px #f56262'\n            });\n            setTimeout(() => { setStyle({ shadow: 'none' }) }, 100);\n        }\n        setWords({\n            rusWord: wordsArr[randomIndexWord].rusWord,\n            rusWordTrans: wordsArr[randomIndexWord].engWord,\n            [btnArr[0]]: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n            [btnArr[1]]: wordsArr[randomIndexWord].engWord,\n            [btnArr[2]]: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n            [btnArr[3]]: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n        })\n    }\n\n    return (\n        <>\n            <Header />\n            <section className=\"section-card\">\n                <div className=\"card\">\n                    <div>Правильных ответов {rightAnswers}</div>\n                    <div>Неправильных ответов {wrongAnswers}</div>\n                    <p className=\"card__word\" translate={words.rusWordTrans}>{words.rusWord}</p>\n                    <div className=\"card__container-button\" style={{ boxShadow: style.shadow }}>\n                        <button className=\"card-button\" name='btn1' value={words.engWord1} onClick={handleBtn}>{words.engWord1}</button>\n                        <button className=\"card-button\" name='btn2' value={words.engWord2} onClick={handleBtn}>{words.engWord2}</button>\n                        <button className=\"card-button\" name='btn3' value={words.engWord3} onClick={handleBtn}>{words.engWord3}</button>\n                        <button className=\"card-button\" name='btn4' value={words.engWord4} onClick={handleBtn}>{words.engWord4}</button>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}","import React from 'react';\nimport { FlashCardForm } from '../components/FlashCard';\n\nexport default class FlashCards extends React.Component {\n    render(){\n        return(\n            <FlashCardForm></FlashCardForm>\n        )\n    }\n}","import React from 'react';\nimport { wordsArr } from '../words.json';\n\nexport const WordsList = () => {\n\n    function tableSearch() {\n        let phrase = document.querySelector('.input-search');\n        let table = document.querySelector('.tabel-words');\n        let regPhrase = new RegExp(phrase.value, 'i');\n        let flag = false;\n        for (let i = 1; i < table.rows.length; i++) {\n            flag = false;\n            for (let j = table.rows[i].cells.length - 1; j >= 0; j--) {\n                flag = regPhrase.test(table.rows[i].cells[j].innerHTML);\n                if (flag) break;\n            }\n            if (flag) {\n                table.rows[i].style.display = \"\";\n            } else {\n                table.rows[i].style.display = \"none\";\n            }\n\n        }\n    }\n\n    const handleChange = (e) => {\n        tableSearch();\n    }\n\n    return (\n        <>\n            <input placeholder=\"Поиск слова\" className=\"input-search\" id=\"search\" type=\"text\" onChange={handleChange} />\n            <table className=\"striped tabel-words\" >\n                <thead>\n                    <tr>\n                        <th>№ п/п</th>\n                        <th>Слово на английском</th>\n                        <th>Слово на русском</th>\n                        <th>Звучание</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {wordsArr.map((word, index) => {\n                        return (\n                            <tr key={word + index}>\n                                <td>{word.id}</td>\n                                <td>{word.engWord}</td>\n                                <td>{word.rusWord}</td>\n                                <td>La-La-La</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </>\n    )\n}","import React from 'react';\nimport { Header } from '../components/Header';\nimport { WordsList } from '../components/Wordslist';\n\nexport default class WordsPage extends React.Component {\n    render() {\n        return (\n            <>\n                <Header />\n                <section className=\"words-section\">\n                    <WordsList />\n                </section>\n            </>\n        )\n    }\n}","import './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport RepeatPage from './pages/RepeatPage';\nimport WordsPage from './pages/WordsPage';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/home'>\n          <MainPage />\n        </Route>\n        <Route path='/flashcards'>\n          <RepeatPage />\n        </Route>\n        <Route path='/wordslist'>\n          <WordsPage />\n        </Route>\n        <Redirect to='/home' />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}