{"version":3,"sources":["components/Header.js","pages/MainPage.js","components/FlashCard.js","components/WriteWord.js","pages/RepeatPage.js","components/Wordslist.js","pages/WordsPage.js","App.js","index.js"],"names":["Header","className","type","to","MainPage","React","Component","FlashCardForm","wordsArr","randomIndexWordFirst","Math","floor","random","length","useState","rusWord","rusWordTrans","engWord","engWord1","engWord2","engWord3","engWord4","words","setWords","rightAnswers","setRightAnswer","wrongAnswers","setWrongAnswer","btnArr","shadow","style","setStyle","handleBtn","e","i","j","temp","changeBtn","randomIndexWordSecond","transWord","document","querySelector","getAttribute","target","value","setTimeout","translate","boxShadow","name","onClick","WriteWord","randomIndexWord","word","setWord","userAnswer","setUserAnswer","countWrong","setCountWrong","disable","setDisable","changeWord","onChange","placeholder","disabled","console","log","FlashCards","props","state","isEasy","easyHard","handleClick","bind","this","setState","prevState","WordsList","id","phrase","table","regPhrase","RegExp","flag","rows","cells","test","innerHTML","display","tableSearch","map","index","WordsPage","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.01a61481.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\n\nexport const Header = () => {\n    // document.addEventListener('DOMContentLoaded', function () {\n    //     var elems = document.querySelectorAll('.sidenav');\n    //     var instances = M.Sidenav.init(elems, options);\n    // });\n\n    return (\n        <>\n            <nav>\n                <div className=\"nav-wrapper\">\n                    <input type=\"checkbox\" className=\"checkbox\" />\n                    <ul  className=\"right nav-menu\">\n                        <li><NavLink to=\"/english-cards/home\">Главная</NavLink></li>\n                        <li><NavLink to=\"/english-cards/flashcards\">Повторение</NavLink></li>\n                        <li><NavLink to=\"/english-cards/wordslist\">Список слов</NavLink></li>\n                    </ul>\n                </div>\n            </nav>\n        </>\n    )\n}","import React from 'react';\nimport { Header } from '../components/Header';\n\nexport default class MainPage extends React.Component {\n    render() {\n        return(\n            <Header></Header>\n        )\n        \n    }\n}","import React, { useState } from 'react';\n\nexport const FlashCardForm = ({ wordsArr }) => {\n    const randomIndexWordFirst = Math.floor(Math.random() * (wordsArr.length - 0) + 0);\n    const [words, setWords] = useState({\n        rusWord: wordsArr[randomIndexWordFirst].rusWord,\n        rusWordTrans: wordsArr[randomIndexWordFirst].engWord,\n        engWord1: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n        engWord2: wordsArr[randomIndexWordFirst].engWord,\n        engWord3: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n        engWord4: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n    });\n    const [rightAnswers, setRightAnswer] = useState(0);\n    const [wrongAnswers, setWrongAnswer] = useState(0);\n    let btnArr = ['engWord1', 'engWord2', 'engWord3', 'engWord4'];\n\n    const [style, setStyle] = useState({\n        shadow: 'none'\n    })\n    // тусуем кнопки, чтобы ответ был всегда в разном месте\n    const changeBtn = () => {\n        var i = 0, j = 0, temp = null\n        for (i = btnArr.length - 1; i > 0; i -= 1) {\n            j = Math.floor(Math.random() * (i + 1))\n            temp = btnArr[i]\n            btnArr[i] = btnArr[j]\n            btnArr[j] = temp\n        }\n        return btnArr;\n    }\n    const handleBtn = (e) => {\n        changeBtn();\n        const randomIndexWordSecond = Math.floor(Math.random() * (wordsArr.length - 0) + 0);\n        const transWord = document.querySelector('.card__word').getAttribute('translate')\n        if (e.target.value === transWord) {\n            setRightAnswer(rightAnswers + 1);\n            setStyle({\n                shadow: 'inset 0px 0px 15px 0px #32CD32'\n            });\n            setTimeout(() => { setStyle({ shadow: 'none' }) }, 100);\n        } else if (e.target.value !== transWord) {\n            setWrongAnswer(wrongAnswers + 1);\n            setStyle({\n                shadow: 'inset 0px 0px 15px 0px #f56262'\n            });\n            setTimeout(() => { setStyle({ shadow: 'none' }) }, 100);\n        }\n        setWords({\n            rusWord: wordsArr[randomIndexWordSecond].rusWord,\n            rusWordTrans: wordsArr[randomIndexWordSecond].engWord,\n            [btnArr[0]]: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n            [btnArr[1]]: wordsArr[randomIndexWordSecond].engWord,\n            [btnArr[2]]: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n            [btnArr[3]]: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n        })\n    }\n\n    return (\n        <>\n            <section className=\"section-card\">\n                <div className=\"card\">\n                    <div>Правильных ответов {rightAnswers}</div>\n                    <div>Неправильных ответов {wrongAnswers}</div>\n                    <p className=\"card__word\" translate={words.rusWordTrans}>{words.rusWord}</p>\n                    <div className=\"card__container-button\" style={{ boxShadow: style.shadow }}>\n                        <button className=\"card-button browser-default\" name='btn1' value={words.engWord1} onClick={handleBtn}>{words.engWord1}</button>\n                        <button className=\"card-button browser-default\" name='btn2' value={words.engWord2} onClick={handleBtn}>{words.engWord2}</button>\n                        <button className=\"card-button browser-default\" name='btn3' value={words.engWord3} onClick={handleBtn}>{words.engWord3}</button>\n                        <button className=\"card-button browser-default\" name='btn4' value={words.engWord4} onClick={handleBtn}>{words.engWord4}</button>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}","import React, { useState } from 'react';\n\nexport const WriteWord = ({ wordsArr }) => {\n    const randomIndexWord = Math.floor(Math.random() * (wordsArr.length - 0) + 0);\n    const [word, setWord] = useState({\n        rusWord: wordsArr[randomIndexWord].rusWord,\n        engWord: wordsArr[randomIndexWord].engWord,\n    });\n    const [userAnswer, setUserAnswer] = useState('');\n    const [rightAnswers, setRightAnswer] = useState(0);\n    const [wrongAnswers, setWrongAnswer] = useState(0);\n    const [countWrong, setCountWrong] = useState(3);\n    const [disable, setDisable] = useState(false);\n    const [style, setStyle] = useState({\n        shadow: 'none'\n    })\n\n    const changeWord = () => {\n        const randomIndexWordSecond = Math.floor(Math.random() * (wordsArr.length - 0) + 0);\n        setCountWrong(3);\n        setWord({\n            rusWord: wordsArr[randomIndexWordSecond].rusWord,\n            engWord: wordsArr[randomIndexWordSecond].engWord,\n        });\n        setUserAnswer('');\n        setDisable(false);\n    }\n\n    const hadleChange = (e) => {\n        setUserAnswer(e.target.value)\n    }\n\n    const handleBtn = (e) => {\n        console.log(userAnswer === word.engWord)\n        if (countWrong === 0) {\n            setCountWrong(word.engWord);\n            setDisable(true);\n            setTimeout(() => { changeWord() }, 2000);\n        }\n        else if (userAnswer === word.engWord) {\n            setRightAnswer(rightAnswers + 1);\n            setStyle({\n                shadow: 'inset 0px 0px 15px 0px #32CD32'\n            });\n            setTimeout(() => { setStyle({ shadow: 'none' }) }, 100);\n            changeWord();\n        } else if (userAnswer !== word.engWord) {\n            setWrongAnswer(wrongAnswers + 1);\n            setStyle({\n                shadow: 'inset 0px 0px 15px 0px #f56262'\n            });\n            setTimeout(() => { setStyle({ shadow: 'none' }) }, 100);\n            setCountWrong(countWrong - 1);\n        }\n    }\n\n    return (\n        <>\n            <section className=\"section-card section-write-word\" >\n                <div className=\"card\" >\n                    <div>Правильных ответов {rightAnswers}</div>\n                    <div>Неправильных ответов {wrongAnswers}</div>\n                    <p className=\"card__word card__word_write\" translate={word.engWord}>{word.rusWord}</p>\n                    <div className=\"card__container-button word-check\" style={{ boxShadow: style.shadow }}>\n                        <span className=\"input-right-answer\" >Попыток до подсказки: {countWrong}</span>\n                        <input\n                            className=\"input-answer\"\n                            name=\"inputAnswer\"\n                            type=\"text\"\n                            value={userAnswer}\n                            onChange={hadleChange}\n                            placeholder=\"введите ответ на английском\"\n                            disabled={disable}\n                        />\n                        <button\n                            className=\"card-button browser-default\"\n                            name='btnCheck'\n                            onClick={handleBtn}\n                            disabled={disable}\n                        >\n                            Проверить\n                        </button>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}","import React from 'react';\nimport { FlashCardForm } from '../components/FlashCard';\nimport { Header } from '../components/Header';\nimport { WriteWord } from '../components/WriteWord';\nimport { wordsArr } from '../words.json';\n\nexport default class FlashCards extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEasy: true,\n            easyHard: 'сложнее'\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        console.log(this.state.isEasy)\n        this.setState((prevState, props) => {\n            return {\n                isEasy: !this.state.isEasy,\n                easyHard: this.state.easyHard === 'проще' ? 'сложнее' : 'проще'\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Header />\n                <input className=\"make-differend-way\" type=\"button\" value={`Сделать ${this.state.easyHard}`} onClick={this.handleClick} />\n                {this.state.isEasy && <FlashCardForm wordsArr={wordsArr} />}\n                {!this.state.isEasy && <WriteWord wordsArr={wordsArr} />}\n            </>\n        )\n    }\n}","import React from 'react';\nimport { wordsArr } from '../words.json';\n\nexport const WordsList = () => {\n\n    function tableSearch() {\n        let phrase = document.querySelector('.input-search');\n        let table = document.querySelector('.tabel-words');\n        let regPhrase = new RegExp(phrase.value, 'i');\n        let flag = false;\n        for (let i = 1; i < table.rows.length; i++) {\n            flag = false;\n            for (let j = table.rows[i].cells.length - 1; j >= 0; j--) {\n                flag = regPhrase.test(table.rows[i].cells[j].innerHTML);\n                if (flag) break;\n            }\n            if (flag) {\n                table.rows[i].style.display = \"\";\n            } else {\n                table.rows[i].style.display = \"none\";\n            }\n\n        }\n    }\n\n    const handleChange = (e) => {\n        tableSearch();\n    }\n\n    return (\n        <>\n            <input placeholder=\"Поиск слова\" className=\"input-search\" id=\"search\" type=\"text\" onChange={handleChange} />\n            <table className=\"striped tabel-words\" >\n                <thead>\n                    <tr>\n                        <th>№ п/п</th>\n                        <th>Слово на английском</th>\n                        <th>Слово на русском</th>\n                        <th>Звучание</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {wordsArr.map((word, index) => {\n                        return (\n                            <tr key={word + index}>\n                                <td>{word.id}</td>\n                                <td>{word.engWord}</td>\n                                <td>{word.rusWord}</td>\n                                <td>La-La-La</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </>\n    )\n}","import React from 'react';\nimport { Header } from '../components/Header';\nimport { WordsList } from '../components/Wordslist';\n\nexport default class WordsPage extends React.Component {\n    render() {\n        return (\n            <>\n                <Header />\n                <section className=\"words-section\">\n                    <WordsList />\n                </section>\n            </>\n        )\n    }\n}","import './App.css';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport RepeatPage from './pages/RepeatPage';\nimport WordsPage from './pages/WordsPage';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/english-cards/home'>\n          <MainPage />\n        </Route>\n        <Route path='/english-cards/flashcards'>\n          <RepeatPage />\n        </Route>\n        <Route path='/english-cards/wordslist'>\n          <WordsPage />\n        </Route>\n        <Redirect to='/english-cards/home' />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}