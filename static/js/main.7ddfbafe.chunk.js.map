{"version":3,"sources":["components/Header.js","pages/MainPage.js","components/FlashCard.js","components/WriteWord.js","pages/RepeatPage.js","components/Wordslist.js","pages/WordsPage.js","App.js","index.js"],"names":["Header","className","type","to","MainPage","React","Component","FlashCardForm","wordsArr","randomIndexWordFirst","document","Math","floor","random","length","useState","rusWord","rusWordTrans","engWord","engWord1","engWord2","engWord3","engWord4","words","setWords","rightAnswers","setRightAnswer","wrongAnswers","setWrongAnswer","btnArr","shadow","style","setStyle","checkAnswer","e","i","j","temp","changeBtn","randomIndexWordSecond","transWord","querySelector","getAttribute","target","value","setTimeout","handleBtn","translate","boxShadow","name","onClick","WriteWord","randomIndexWord","word","setWord","userAnswer","setUserAnswer","countWrong","setCountWrong","disable","setDisable","toUpperCase","trim","changeWord","onChange","onKeyDown","code","placeholder","disabled","autoComplete","FlashCards","props","state","isEasy","easyHard","handleClick","bind","this","setState","WordsList","id","phrase","table","regPhrase","RegExp","flag","rows","cells","test","innerHTML","display","tableSearch","map","index","WordsPage","App","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ddfbafe.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\n\nexport const Header = () => {\n    // document.addEventListener('DOMContentLoaded', function () {\n    //     var elems = document.querySelectorAll('.sidenav');\n    //     var instances = M.Sidenav.init(elems, options);\n    // });\n\n    return (\n        <>\n            <nav>\n                <div className=\"nav-wrapper\">\n                    <input type=\"checkbox\" className=\"checkbox\" />\n                    <ul  className=\"right nav-menu\">\n                        <li><NavLink to=\"/english-cards/home\">Главная</NavLink></li>\n                        <li><NavLink to=\"/english-cards/flashcards\">Повторение</NavLink></li>\n                        <li><NavLink to=\"/english-cards/wordslist\">Список слов</NavLink></li>\n                    </ul>\n                </div>\n            </nav>\n        </>\n    )\n}","import React from 'react';\nimport { Header } from '../components/Header';\n\nexport default class MainPage extends React.Component {\n    render() {\n        return(\n            <Header></Header>\n        )\n        \n    }\n}","import React, { useState, useEffect } from 'react';\n\nexport const FlashCardForm = ({ wordsArr }) => {\n    const doc = document;\n    const randomIndexWordFirst = Math.floor(Math.random() * (wordsArr.length - 0) + 0);\n    const [words, setWords] = useState({\n        rusWord: wordsArr[randomIndexWordFirst].rusWord,\n        rusWordTrans: wordsArr[randomIndexWordFirst].engWord,\n        engWord1: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n        engWord2: wordsArr[randomIndexWordFirst].engWord,\n        engWord3: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n        engWord4: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n    });\n    const [rightAnswers, setRightAnswer] = useState(0);\n    const [wrongAnswers, setWrongAnswer] = useState(0);\n    let btnArr = ['engWord1', 'engWord2', 'engWord3', 'engWord4'];\n\n    const [style, setStyle] = useState({\n        shadow: 'none'\n    })\n    // тусуем кнопки, чтобы ответ был всегда в разном месте\n    const changeBtn = () => {\n        var i = 0, j = 0, temp = null\n        for (i = btnArr.length - 1; i > 0; i -= 1) {\n            j = Math.floor(Math.random() * (i + 1))\n            temp = btnArr[i]\n            btnArr[i] = btnArr[j]\n            btnArr[j] = temp\n        }\n        return btnArr;\n    }\n\n    const checkAnswer = (e) => {\n        changeBtn();\n        const randomIndexWordSecond = Math.floor(Math.random() * (wordsArr.length - 0) + 0);\n        const transWord = document.querySelector('.card__word').getAttribute('translate')\n        if (e.target.value === transWord) {\n            setRightAnswer(rightAnswers + 1);\n            setStyle({\n                shadow: 'inset 0px 0px 15px 0px #32CD32'\n            });\n            setTimeout(() => { setStyle({ shadow: 'none' }) }, 100);\n        } else if (e.target.value !== transWord) {\n            setWrongAnswer(wrongAnswers + 1);\n            setStyle({\n                shadow: 'inset 0px 0px 15px 0px #f56262'\n            });\n            setTimeout(() => { setStyle({ shadow: 'none' }) }, 100);\n        }\n        setWords({\n            rusWord: wordsArr[randomIndexWordSecond].rusWord,\n            rusWordTrans: wordsArr[randomIndexWordSecond].engWord,\n            [btnArr[0]]: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n            [btnArr[1]]: wordsArr[randomIndexWordSecond].engWord,\n            [btnArr[2]]: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n            [btnArr[3]]: wordsArr[Math.floor(Math.random() * (wordsArr.length - 0) + 0)].engWord,\n        })\n    }\n\n    const handleBtn = (e) => {\n        checkAnswer(e);\n    }\n\n    return (\n        <>\n            <section className=\"section-card\">\n                <div className=\"card\">\n                    <div>Правильных ответов {rightAnswers}</div>\n                    <div>Неправильных ответов {wrongAnswers}</div>\n                    <p className=\"card__word\" translate={words.rusWordTrans}>{words.rusWord}</p>\n                    <div className=\"card__container-button\" style={{ boxShadow: style.shadow }}>\n                        <button className=\"card-button browser-default\" name='btn1' value={words.engWord1} onClick={handleBtn} >{words.engWord1}</button>\n                        <button className=\"card-button browser-default\" name='btn2' value={words.engWord2} onClick={handleBtn} >{words.engWord2}</button>\n                        <button className=\"card-button browser-default\" name='btn3' value={words.engWord3} onClick={handleBtn} >{words.engWord3}</button>\n                        <button className=\"card-button browser-default\" name='btn4' value={words.engWord4} onClick={handleBtn} >{words.engWord4}</button>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}","import React, { useState } from 'react';\n\nexport const WriteWord = ({ wordsArr }) => {\n    const randomIndexWord = Math.floor(Math.random() * (wordsArr.length - 0) + 0);\n    const [word, setWord] = useState({\n        rusWord: wordsArr[randomIndexWord].rusWord,\n        engWord: wordsArr[randomIndexWord].engWord,\n    });\n    const [userAnswer, setUserAnswer] = useState('');\n    const [rightAnswers, setRightAnswer] = useState(0);\n    const [wrongAnswers, setWrongAnswer] = useState(0);\n    const [countWrong, setCountWrong] = useState(3);\n    const [disable, setDisable] = useState(false);\n    const [style, setStyle] = useState({\n        shadow: 'none'\n    })\n\n    const changeWord = () => {\n        const randomIndexWordSecond = Math.floor(Math.random() * (wordsArr.length - 0) + 0);\n        setCountWrong(3);\n        setWord({\n            rusWord: wordsArr[randomIndexWordSecond].rusWord,\n            engWord: wordsArr[randomIndexWordSecond].engWord,\n        });\n        setUserAnswer('');\n        setDisable(false);\n    }\n\n    const checkAnswer = () => {\n        if (userAnswer.toUpperCase().trim() === word.engWord.toUpperCase()) {\n            setRightAnswer(rightAnswers + 1);\n            setStyle({\n                shadow: 'inset 0px 0px 15px 0px #32CD32'\n            });\n            setTimeout(() => { setStyle({ shadow: 'none' }) }, 100);\n            changeWord();\n        } else if (userAnswer.toUpperCase().trim() !== word.engWord.toUpperCase()) {\n            setWrongAnswer(wrongAnswers + 1);\n            setStyle({\n                shadow: 'inset 0px 0px 15px 0px #f56262'\n            });\n            setTimeout(() => { setStyle({ shadow: 'none' }) }, 100);\n            countWrong === 1 ? setCountWrong(word.engWord) : setCountWrong(countWrong - 1);\n        }\n    }\n\n    const hadleChange = (e) => {\n        setUserAnswer(e.target.value)\n    }\n\n    const onKeyDown = (e) => {\n        if (e.code === 'Enter') {\n            checkAnswer(e);\n        }\n    }\n\n    const handleBtn = (e) => {\n        checkAnswer(e);\n    }\n\n    return (\n        <>\n            <section className=\"section-card section-write-word\" >\n                <div className=\"card\" >\n                    <div>Правильных ответов {rightAnswers}</div>\n                    <div>Неправильных ответов {wrongAnswers}</div>\n                    <p className=\"card__word card__word_write\" translate={word.engWord}>{word.rusWord}</p>\n                    <div className=\"card__container-button word-check\" style={{ boxShadow: style.shadow }}>\n                        <span className=\"input-right-answer\" >Подсказка появится тут: {countWrong}</span>\n                        <input\n                            className=\"input-answer\"\n                            name=\"inputAnswer\"\n                            type=\"text\"\n                            value={userAnswer}\n                            onChange={hadleChange}\n                            onKeyDown={onKeyDown}\n                            placeholder=\"введите ответ на английском\"\n                            disabled={disable}\n                            autoComplete={'off'}\n                        />\n                        <button\n                            className=\"card-button browser-default\"\n                            name='btnCheck'\n                            onClick={handleBtn}\n                            disabled={disable}\n                        >\n                            Проверить\n                        </button>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}","import React from 'react';\nimport { FlashCardForm } from '../components/FlashCard';\nimport { Header } from '../components/Header';\nimport { WriteWord } from '../components/WriteWord';\nimport { wordsArr } from '../words.json';\n\nexport default class FlashCards extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEasy: true,\n            easyHard: 'сложнее'\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.setState({\n            isEasy: !this.state.isEasy,\n            easyHard: this.state.easyHard === 'проще' ? 'сложнее' : 'проще'\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Header />\n                <input className=\"make-differend-way\" type=\"button\" value={`Сделать ${this.state.easyHard}`} onClick={this.handleClick} />\n                {this.state.isEasy && <FlashCardForm wordsArr={wordsArr} />}\n                {!this.state.isEasy && <WriteWord wordsArr={wordsArr} />}\n            </>\n        )\n    }\n}","import React from 'react';\nimport { wordsArr } from '../words.json';\n\nexport const WordsList = () => {\n\n    function tableSearch() {\n        let phrase = document.querySelector('.input-search');\n        let table = document.querySelector('.tabel-words');\n        let regPhrase = new RegExp(phrase.value, 'i');\n        let flag = false;\n        for (let i = 1; i < table.rows.length; i++) {\n            flag = false;\n            for (let j = table.rows[i].cells.length - 1; j >= 0; j--) {\n                flag = regPhrase.test(table.rows[i].cells[j].innerHTML);\n                if (flag) break;\n            }\n            if (flag) {\n                table.rows[i].style.display = \"\";\n            } else {\n                table.rows[i].style.display = \"none\";\n            }\n\n        }\n    }\n\n    const handleChange = (e) => {\n        tableSearch();\n    }\n\n    return (\n        <>\n            <input placeholder=\"Поиск слова\" className=\"input-search\" id=\"search\" type=\"text\" onChange={handleChange} />\n            <table className=\"striped tabel-words\" >\n                <thead>\n                    <tr>\n                        <th>№ п/п</th>\n                        <th>Слово на английском</th>\n                        <th>Слово на русском</th>\n                        <th>Звучание</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {wordsArr.map((word, index) => {\n                        return (\n                            <tr key={word + index}>\n                                <td>{word.id}</td>\n                                <td>{word.engWord}</td>\n                                <td>{word.rusWord}</td>\n                                <td>La-La-La</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </>\n    )\n}","import React from 'react';\nimport { Header } from '../components/Header';\nimport { WordsList } from '../components/Wordslist';\n\nexport default class WordsPage extends React.Component {\n    render() {\n        return (\n            <>\n                <Header />\n                <section className=\"words-section\">\n                    <WordsList />\n                </section>\n            </>\n        )\n    }\n}","import './App.css';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport RepeatPage from './pages/RepeatPage';\nimport WordsPage from './pages/WordsPage';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/english-cards/home'>\n          <MainPage />\n        </Route>\n        <Route path='/english-cards/flashcards'>\n          <RepeatPage />\n        </Route>\n        <Route path='/english-cards/wordslist'>\n          <WordsPage />\n        </Route>\n        <Redirect to='/english-cards/flashcards' />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}